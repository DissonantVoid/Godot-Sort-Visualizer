Current Task: shell sort and quick sort
Next Task: ability to change visualizer at run-time


Todo (also see in-code todos by searching in all files for "todo"):
	-allow user to change visualizer scene at run-time
	-replace some buttons with icons
	-sfx
	-disabled buttons don't look very disabled

Plan:
  -keep sorting implementation code independent so we can apply the sort on any custom scene
  -sorters (easy to hard):
		[X] Bubble sort,   [X] Selection sort,   [X] Insertion sort
		[X] Gnome sort,    [ ] Shell sort,       [ ] Quick sort
		[!] Merge sort,    [ ] Heap sort,        [ ] Radix sort
		[ ] Bitonic sort,  [ ] Bogo sort

  -visualizers:
      -humans shooting zombies, each human shoots a type of zombie, but each type require specific weapon
      -lazers of different colors shooting inputs of matching colors, need sorting
      -bunch of cakes in unmatching boxes, on each sort 2 cakes are moved into a conveyor belt
	   and transfered to each other position
      -lines based on this image: en.wikipedia.org/wiki/Shellsort#/media/File:Shell_sorting_algorithm_color_bars.svg

Keep in mind:
  Sorters:
     -since this is potentially an educational project, always keep a short description on how the algorithm works
      + wiki link and keep code easy to read
  UI:
     -pallete: 3 left color used for background/panels etc.., 3 right colors used for ui (button etc..)
     -no UI focus
     -all clickables should have a hand pointer

Deadline: 2 months (around february 30)